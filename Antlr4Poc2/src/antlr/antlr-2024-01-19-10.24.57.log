2024-01-19 10:24:56:585 grammar LogManager.java:25 before: (COMBINED_GRAMMAR SQL (RULES (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip))) (RULE STRING (BLOCK (ALT '\'' (* (BLOCK (ALT (~ (SET '\''))) (ALT ' ') (ALT '\t') (ALT '\r') (ALT '\n'))) '\''))) (RULE NUMBER (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE SELECT (BLOCK (ALT 'SELECT'))) (RULE FROM (BLOCK (ALT 'FROM'))) (RULE WHERE (BLOCK (ALT 'WHERE'))) (RULE OPERATOR (BLOCK (ALT '=') (ALT '<') (ALT '>'))) (RULE IDENTIFIER (BLOCK (ALT [a-zA-Z_] (* (BLOCK (ALT [a-zA-Z_0-9])))))) (RULE selectStatement (BLOCK (ALT SELECT (BLOCK (ALT columnName) (ALT '*')) FROM tableName (? (BLOCK (ALT WHERE condition)))))) (RULE columnName (BLOCK (ALT IDENTIFIER))) (RULE tableName (BLOCK (ALT IDENTIFIER))) (RULE condition (BLOCK (ALT columnName OPERATOR value))) (RULE value (BLOCK (ALT STRING) (ALT NUMBER)))))
2024-01-19 10:24:56:601 grammar LogManager.java:25 after: (COMBINED_GRAMMAR SQL (RULES (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip))) (RULE STRING (BLOCK (ALT '\'' (* (BLOCK (ALT (~ (SET '\''))) (ALT ' ') (ALT '\t') (ALT '\r') (ALT '\n'))) '\''))) (RULE NUMBER (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE SELECT (BLOCK (ALT 'SELECT'))) (RULE FROM (BLOCK (ALT 'FROM'))) (RULE WHERE (BLOCK (ALT 'WHERE'))) (RULE OPERATOR (BLOCK (ALT (SET '=' '<' '>')))) (RULE IDENTIFIER (BLOCK (ALT [a-zA-Z_] (* (BLOCK (ALT [a-zA-Z_0-9])))))) (RULE selectStatement (BLOCK (ALT SELECT (BLOCK (ALT columnName) (ALT '*')) FROM tableName (? (BLOCK (ALT WHERE condition)))))) (RULE columnName (BLOCK (ALT IDENTIFIER))) (RULE tableName (BLOCK (ALT IDENTIFIER))) (RULE condition (BLOCK (ALT columnName OPERATOR value))) (RULE value (BLOCK (ALT (SET STRING NUMBER))))))
2024-01-19 10:24:56:628 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR SQL (RULES (RULE selectStatement (BLOCK (ALT SELECT (BLOCK (ALT columnName) (ALT '*')) FROM tableName (? (BLOCK (ALT WHERE condition)))))) (RULE columnName (BLOCK (ALT IDENTIFIER))) (RULE tableName (BLOCK (ALT IDENTIFIER))) (RULE condition (BLOCK (ALT columnName OPERATOR value))) (RULE value (BLOCK (ALT (SET STRING NUMBER))))))
2024-01-19 10:24:56:628 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR SQLLexer (RULES (RULE T__0 (BLOCK (ALT '*'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip))) (RULE STRING (BLOCK (ALT '\'' (* (BLOCK (ALT (~ (SET '\''))) (ALT ' ') (ALT '\t') (ALT '\r') (ALT '\n'))) '\''))) (RULE NUMBER (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE SELECT (BLOCK (ALT 'SELECT'))) (RULE FROM (BLOCK (ALT 'FROM'))) (RULE WHERE (BLOCK (ALT 'WHERE'))) (RULE OPERATOR (BLOCK (ALT (SET '=' '<' '>')))) (RULE IDENTIFIER (BLOCK (ALT [a-zA-Z_] (* (BLOCK (ALT [a-zA-Z_0-9]))))))))
2024-01-19 10:24:56:982 semantics LogManager.java:25 tokens={EOF=-1, T__0=1, WS=2, STRING=3, NUMBER=4, SELECT=5, FROM=6, WHERE=7, OPERATOR=8, IDENTIFIER=9}
2024-01-19 10:24:56:982 semantics LogManager.java:25 strings={'*'=1, 'SELECT'=5, 'FROM'=6, 'WHERE'=7}
2024-01-19 10:24:56:986 LL1 LogManager.java:25 
DECISION 0 in rule selectStatement
2024-01-19 10:24:56:990 LL1 LogManager.java:25 look=[9, 1]
2024-01-19 10:24:56:990 LL1 LogManager.java:25 LL(1)? true
2024-01-19 10:24:56:990 LL1 LogManager.java:25 
DECISION 1 in rule selectStatement
2024-01-19 10:24:56:990 LL1 LogManager.java:25 look=[7, <EOF>]
2024-01-19 10:24:56:991 LL1 LogManager.java:25 LL(1)? true
